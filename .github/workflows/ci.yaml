name: Build LibrimeKit

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Ensure Cache Directory Exists
        run: mkdir -p boost-iosx/scripts/Pods/icu4c-iosx/product/frameworks

      - name: Restore Cache Boost
        id: cache-boost-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            boost-iosx/frameworks
            boost-iosx/scripts/Pods/icu4c-iosx/product/frameworks
          key: ${{ runner.os }}-boost

      - name: Debug ICU Build Output
        run: ls -lah boost-iosx/scripts/Pods/icu4c-iosx/product/frameworks || echo "ICU frameworks not found!"

      - name: Build Boost (if needed)
        if: steps.cache-boost-restore.outputs.cache-hit != 'true'
        run: make boost-build

      - name: Verify ICU Frameworks Before Copy
        run: |
          if [ ! -d "boost-iosx/scripts/Pods/icu4c-iosx/product/frameworks/icudata.xcframework" ]; then
            echo "Error: icudata.xcframework is missing!"
            exit 1
          fi

      - name: Copy Boost
        run: make boost-copy

      - name: Save Cache Boost
        id: cache-boost-save
        uses: actions/cache/save@v3
        with:
          path: |
            boost-iosx/frameworks
            boost-iosx/scripts/Pods/icu4c-iosx/product/frameworks
          key: ${{ runner.os }}-boost

      - name: Build Librime
        run: make librime-build

      - name: Make Archive
        run: tar -acf Frameworks.tgz Frameworks

      - name: Upload Archive
        uses: actions/upload-artifact@v4
        with:
          name: librimekit-frameworks
          path: Frameworks.tgz

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Frameworks.tgz
          asset_name: Frameworks.tgz
          asset_content_type: application/gzip
